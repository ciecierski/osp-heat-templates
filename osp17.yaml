heat_template_version: rocky

parameters:
  RHELImage:
    type: string
    default: RHEL-8.4.0-x86_64-latest
  DirectorImage:
    type: string
    default: jslagle-director-8.4
  DirectorUsername:
    type: string
    default: stack
  ControllerCount:
    type: number
    default: 3
  ComputeCount:
    type: number
    default: 1
  ControllerFlavor:
    type: string
    default: m1.large
  ComputeFlavor:
    type: string
    default: m1.medium
  DirectorFlavor:
    type: string
    default: m1.xlarge
  KeyName:
    type: string
    default: jslagle
  FloatingNetwork:
    type: string
    default: provider_net_sysops
  RunFullDeploy:
    type: boolean
    default: false
    description: |
      Run the full deployment script (/home/stack/deploy.sh) automatically as
      part of cloud-init. Will deploy undercloud and overcloud. Defaults to
      False.
  PrivateKeyContents:
    type: string
    description: |
      SSH private key absolute file path used to connect to the created
      servers.  The private key is needed so that the undercloud can SSH to the
      overcloud nodes. Do not use a key that should be otherwise protected.
  PublicKey:
    type: string
    description: |
      SSH public key absolute file path used to connect to the created servers.
  PublicKeyContents:
    type: string
    description: |
      SSH public key contents used to connect to the created servers.

resources:

  KeyPair:
    type: OS::Nova::KeyPair
    properties:
      name:
        list_join:
          - '-'
          - - {get_param: OS::stack_name}
            - keypair
      public_key: {get_param: PublicKeyContents}

  CtlplaneNetwork:
    type: OS::Neutron::Net
    properties:
      name:
        list_join:
          - '-'
          - - {get_param: OS::stack_name}
            - ctlplane
      port_security_enabled: false

  ManagementNetwork:
    type: OS::Neutron::Net
    properties:
      name:
        list_join:
          - '-'
          - - {get_param: OS::stack_name}
            - management
      port_security_enabled: false

  CtlplaneSubnet:
    type: OS::Neutron::Subnet
    properties:
      network: {get_resource: CtlplaneNetwork}
      allocation_pools:
        - start: 192.168.24.1
          end: 192.168.24.200
      cidr: 192.168.24.0/24
      enable_dhcp: false
      gateway_ip: null

  ManagementSubnet:
    type: OS::Neutron::Subnet
    properties:
      network: {get_resource: ManagementNetwork}
      allocation_pools:
        - start: 10.98.0.2
          end: 10.98.0.200
      enable_dhcp: true
      cidr: 10.98.0.0/24

  FloatingRouter:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: FloatingNetwork}
      name:
        list_join:
          - '-'
          - - {get_param: OS::stack_name}
            - router

  FloatingRouterInterface:
    type: OS::Neutron::RouterInterface
    properties:
      router: {get_resource: FloatingRouter}
      subnet: {get_resource: ManagementSubnet}

  Director:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: DirectorFlavor}
      key_name: {get_resource: KeyPair}
      name: osp17-director
      image: {get_param: DirectorImage}
      networks:
        - port: {get_resource: ManagementPort}
        - port: {get_resource: CtlplanePort}
      user_data: {get_resource: DirectorUserData}
      user_data_format: RAW

  DirectorServerUserData:
    type: server-user-data.yaml

  DirectorTripleOClientConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/usr/bin/bash
        if rpm -q python3-tripleoclient; then
          sudo dnf -y update python3-tripleoclient
        else
          sudo dnf -y install python3-tripleoclient
        fi
        # Needed so the undercloud install doesn't fail fqdn validation
        sudo hostnamectl set-hostname osp17-director.localdomain

  DirectorUndercloudConfig:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
          # We can't use owner:stack here b/c write_files runs before users
          # See https://bugs.launchpad.net/cloud-init/+bug/1486113
          - path: /home/stack/undercloud.conf
            permissions: '0644'
            content: {get_file: deploy-templates/undercloud.conf}
          - path: /home/stack/container-image-prepare.yaml
            permissions: '0644'
            content: {get_file: deploy-templates/container-image-prepare.yaml}
          - path: /home/stack/vip-data-default.yaml
            permissions: '0644'
            content: {get_file: deploy-templates/vip-data-default.yaml}
          - path: /home/stack/overcloud-environment.yaml
            permissions: '0644'
            content: {get_file: deploy-templates/overcloud-environment.yaml}
          - path: /home/stack/network-config-update.yaml
            permissions: '0644'
            content: {get_file: deploy-templates/network-config-update.yaml}
          - path: /home/stack/net_config_static_bridge.j2
            permissions: '0644'
            content: {get_file: deploy-templates/net_config_static_bridge.j2}
          - path: /home/stack/01-undercloud-install.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/01-undercloud-install.sh}
          - path: /home/stack/02-network-provision.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/02-network-provision.sh}
          - path: /home/stack/03-vip-provision.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/03-vip-provision.sh}
          - path: /home/stack/04-node-provision.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/04-node-provision.sh}
          - path: /home/stack/05-overcloud-deploy.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/05-overcloud-deploy.sh}
          - path: /home/stack/deploy.sh
            permissions: '0755'
            content: {get_file: deploy-scripts/deploy.sh}
          - path: /home/stack/overcloud-baremetal-deploy.yaml
            permissions: '0644'
            content:
              str_replace:
                template: "value"
                params:
                  value: {get_attr: [BaremetalDeployInput, value]}
          - path: /home/stack/.ssh/id_rsa
            permissions: '0600'
            content: {get_param: PrivateKeyContents}
          - path: /home/stack/.ssh/id_rsa.pub
            permissions: '0600'
            content: {get_param: PublicKeyContents}
          - path: /home/stack/.tmux.conf
            permissions: '0644'
            content: {get_file: deploy-files/tmux.conf}
          - path: /root/cloud-init-timedatectl.pp
            permissions: '0644'
            content: {get_file: deploy-files/cloud-init-timedatectl.pp}

  DirectorRunFullDeploy:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        if:
          - {get_param: RunFullDeploy}
          - |
            #!/bin/bash
            semanage -i /root/cloud-init-timedatectl.pp
            sudo -iu stack bash<<EOF
            tmux new-session -d -s undercloud
            tmux send-keys -t undercloud:0 "export SUDO_USER=stack"
            tmux send-keys -t undercloud:0 Enter
            tmux send-keys -t undercloud:0 /home/stack/deploy.sh
            tmux send-keys -t undercloud:0 Enter
            EOF
          - |
            #!/bin/bash
            true

  DirectorUserData:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        list_concat:
          - {get_attr: [DirectorServerUserData, ServerUserData]}
          - - config: {get_resource: DirectorTripleOClientConfig}
              subtype: x-shellscript
            - config: {get_resource: DirectorUndercloudConfig}
            - config: {get_resource: DirectorRunFullDeploy}
              subtype: x-shellscript

  BaremetalDeployInput:
    type: OS::Heat::Value
    properties:
      value:
        - name: Controller
          count: {get_param: ControllerCount}
          defaults:
            managed: false
            networks:
              - network: ctlplane
            network_config:
              template: /usr/share/ansible/roles/tripleo_network_config/templates/net_config_static_bridge.j2
          instances: {get_attr: [Controllers, BaremetalDeployInput]}
        - name: Compute
          count: {get_param: ComputeCount}
          defaults:
            managed: false
            networks:
              - network: ctlplane
            network_config:
              template: /usr/share/ansible/roles/tripleo_network_config/templates/net_config_static_bridge.j2
          instances: {get_attr: [Computes, BaremetalDeployInput]}

  ManagementPort:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: ManagementNetwork}
      fixed_ips:
        - ip_address: 10.98.0.5

  CtlplanePort:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: CtlplaneNetwork}
      fixed_ips:
        - ip_address: 192.168.24.1

  # Not actually associated with the Director server, resource is just here to
  # reserve the IP so the undercloud install can use it.
  DirectorAdminVip:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: CtlplaneNetwork}
      fixed_ips:
        - ip_address: 192.168.24.3

  # Not actually associated with the Director server, resource is just here to
  # reserve the IP so the undercloud install can use it.
  DirectorPublicVip:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: CtlplaneNetwork}
      fixed_ips:
        - ip_address: 192.168.24.2

  DirectorFloatingIP:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: FloatingNetwork}

  DirectorFloatingIpAssociation:
    type: OS::Neutron::FloatingIPAssociation
    depends_on: FloatingRouterInterface
    properties:
      floatingip_id: {get_resource: DirectorFloatingIP}
      port_id: {get_resource: ManagementPort}

  Controllers:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: ControllerCount}
      resource_def:
        type: overcloud-server.yaml
        properties:
          flavor: {get_param: ControllerFlavor}
          key_name: {get_resource: KeyPair}
          name:
            list_join:
              - '-'
              - - {get_param: OS::stack_name}
                - 'controller'
                - '%index%'
          image: {get_param: RHELImage}
          index: |
            %index%
          SubnetStart: 10
          ManagementNetwork: {get_resource: ManagementNetwork}
          CtlplaneNetwork: {get_resource: CtlplaneNetwork}

  Computes:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: ComputeCount}
      resource_def:
        type: overcloud-server.yaml
        properties:
          flavor: {get_param: ComputeFlavor}
          key_name: {get_resource: KeyPair}
          name:
            list_join:
              - '-'
              - - {get_param: OS::stack_name}
                - 'compute'
                - '%index%'
          image: {get_param: RHELImage}
          index: |
            %index%
          SubnetStart: 100
          ManagementNetwork: {get_resource: ManagementNetwork}
          CtlplaneNetwork: {get_resource: CtlplaneNetwork}

outputs:
  DirectorFloatingIP:
    description: DirectorFloatingIP
    value: {get_attr: [DirectorFloatingIP, floating_ip_address]}
